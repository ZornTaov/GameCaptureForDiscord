name: .NET Framework Desktop

on:
  workflow_dispatch:
    inputs:
      name:
        description: 'Release name'
        required: true
        default: 'Release'
      tag:
        description: 'Tag'
        required: true
        default: 'v'

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]
        targetplatform: [x86, x64]

    runs-on: windows-latest  
    
    env:
      Solution_Name: GameCaptureForDiscord.sln
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
      
    - name: Restore Packages
      run: nuget restore $env:Solution_Name
      
    - name: Create Release Directory
      run: mkdir _release
      
    - name: Compile the application
      run: msbuild $env:Solution_Name /p:platform=$env:TargetPlatform /p:configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        TargetPlatform: ${{ matrix.targetplatform }}

    # Archive the package
    - name: Create archive
      run: Compress-Archive -Path ${{ github.workspace }}\bin\${{ matrix.targetplatform }}\${{ matrix.configuration }}\* -DestinationPath ${{ github.workspace }}\_release\GCFD_${{ matrix.targetplatform }}.zip
    
    # Create the release: https://github.com/ncipollo/release-action
    - name: Create release
      id: create_release
      uses: ncipollo/release-action@v1.8.6
      env:
        Configuration: ${{ matrix.configuration }}
        TargetPlatform: ${{ matrix.targetplatform }}
      with:
        allowUpdates: true
        artifacts: "${{ github.workspace }}\\_release\\*"
        artifactErrorsFailBuild: true
        tag: refs/tags/${{ github.event.inputs.tag }}
        name: ${{ github.event.inputs.name }} ${{ github.event.inputs.tag }}
        replacesArtifacts: false
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Add Artifact
      uses: actions/upload-artifact@v2
      with:
        name: matrix.targetplatform
        path: ${{ github.workspace }}\bin\${{ matrix.targetplatform }}\${{ matrix.configuration }}\

    # Upload release asset:   https://github.com/actions/upload-release-asset
#    - name: Update release asset
#      id: upload-release-asset
#      uses: actions/upload-release-asset@v1
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create_release.outputs.upload_url }}  # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#        asset_path: ${{ github.workspace }}\_release\GCFD_${{ matrix.targetplatform }}_${{ matrix.configuration }}.zip
#        asset_name: GCFD_${{ matrix.targetplatform }}_${{ matrix.configuration }}.zip
#        asset_content_type: application/zip
