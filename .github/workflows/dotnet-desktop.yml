name: .NET Framework Desktop

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]
        targetplatform: [x86, x64]

    runs-on: windows-latest  
    
    env:
      Solution_Name: GameCaptureForDiscord.sln
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
      
    - name: Restore Packages
      run: nuget restore $env:Solution_Name
      
    - name: Create Release Directory
      run: mkdir _release
      
    - name: Compile the application
      run: msbuild $env:Solution_Name /p:platform=$env:TargetPlatform /p:configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        TargetPlatform: ${{ matrix.targetplatform }}

    # Archive the package
    - name: Create archive
      run: Compress-Archive -Path ${{ github.workspace }}\bin\$env:TargetPlatform\$env:Configuration\* -DestinationPath ${{ github.workspace }}\_release\GCFD_$env:TargetPlatform_$env:Configuration.zip
      env:
        Configuration: ${{ matrix.configuration }}
        TargetPlatform: ${{ matrix.targetplatform }}
        
    # Create the release:  https://github.com/actions/create-release
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref}}
        release_name:  ${{ github.ref }}
        draft: false
        prerelease: false

    # Upload release asset:   https://github.com/actions/upload-release-asset
    - name: Update release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        Configuration: ${{ matrix.configuration }}
        TargetPlatform: ${{ matrix.targetplatform }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}  # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ${{ github.workspace }}\_release\GCFD_$env:TargetPlatform_$env:Configuration.zip
        asset_name: GCFD_$env:TargetPlatform_$env:Configuration.zip
        asset_content_type: application/zip
